现在各大浏览器通常用采用的垃圾回收有两种方法：标记清除、引用计数。

1、标记清除

当变量进入执行环境是，就标记这个变量为“进入环境”。
从逻辑上讲，永远不能释放进入环境的变量所占用的内存，
因为只要执行流进入相应的环境，就可能会用到他们。
当变量离开环境时，则将其标记为“离开环境”。

问题：会产生空间碎片化问题


2.引用计数

引用计数的含义是跟踪记录每个值被引用的次数。
当声明了一个变量并将一个引用类型赋值给该变量时，则这个值的引用次数就是1。
如果包含对这个值引用的变量又取得了另外一个值，则这个值的引用次数就减1。
当这个引用次数变成0时，则说明没有办法再访问这个值了，
因而就可以将其所占的内存空间给收回来。

function problem() {
    var objA = new Object();
    var objB = new Object();

    objA.someOtherObject = objB;
    objB.anotherObject = objA;
}

缺点：无法处理循环引用数值问题，相互引用频繁容易造成内存泄漏的问题
优点：实时，反映处理快，因为是实现对整体的监听递归，回调